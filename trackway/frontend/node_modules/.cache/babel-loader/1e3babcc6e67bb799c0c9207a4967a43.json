{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nconst useFetch = url => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n\n      try {\n        const res = await fetch(url);\n\n        if (!res.ok) {\n          setError(\"Failed to fetch\");\n        }\n\n        const result = await res.json();\n        setData(result.data);\n        setLoading(false);\n      } catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [url]);\n  return {\n    data,\n    error,\n    loading\n  };\n};\n\n_s(useFetch, \"6nhoqVvctpRRYiww7uwVz/g7/BM=\");\n\nexport default useFetch;","map":{"version":3,"sources":["C:/Users/Sajal khandelwal/Desktop/Trackway/tour-management/frontend/src/hooks/useFetch.js"],"names":["useState","useEffect","useFetch","url","data","setData","error","setError","loading","setLoading","fetchData","res","fetch","ok","result","json","err","message"],"mappings":";;AAAA,SAAQA,QAAR,EAAiBC,SAAjB,QAAiC,OAAjC;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AACvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACb,UAAMS,SAAS,GAAG,YAAS;AACvBD,MAAAA,UAAU,CAAC,IAAD,CAAV;;AAEA,UAAI;AACA,cAAME,GAAG,GAAG,MAAMC,KAAK,CAACT,GAAD,CAAvB;;AAEA,YAAG,CAACQ,GAAG,CAACE,EAAR,EAAY;AACRN,UAAAA,QAAQ,CAAC,iBAAD,CAAR;AAEH;;AAED,cAAMO,MAAM,GAAE,MAAMH,GAAG,CAACI,IAAJ,EAApB;AACAV,QAAAA,OAAO,CAACS,MAAM,CAACV,IAAR,CAAP;AACAK,QAAAA,UAAU,CAAC,KAAD,CAAV;AAEH,OAZD,CAYE,OAAOO,GAAP,EAAY;AACVT,QAAAA,QAAQ,CAACS,GAAG,CAACC,OAAL,CAAR;AACAR,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,KAnBD;;AAoBAC,IAAAA,SAAS;AACT,GAtBQ,EAsBN,CAACP,GAAD,CAtBM,CAAT;AAwBA,SAAQ;AACPC,IAAAA,IADO;AAEPE,IAAAA,KAFO;AAGPE,IAAAA;AAHO,GAAR;AAKF,CAlCD;;GAAMN,Q;;AAoCN,eAAeA,QAAf","sourcesContent":["import {useState,useEffect} from 'react'\r\n\r\nconst useFetch = (url) => {\r\n   const [data, setData] = useState([])\r\n   const [error, setError] = useState(null)\r\n   const [loading, setLoading] = useState(false)\r\n\r\n   useEffect(()=>{\r\n    const fetchData = async()=>{\r\n        setLoading(true)\r\n\r\n        try {\r\n            const res = await fetch(url)\r\n\r\n            if(!res.ok) {\r\n                setError(\"Failed to fetch\");\r\n                \r\n            }\r\n\r\n            const result =await res.json()\r\n            setData(result.data);\r\n            setLoading(false);\r\n           \r\n        } catch (err) {\r\n            setError(err.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n    fetchData()\r\n   }, [url]);\r\n\r\n   return  {\r\n    data,\r\n    error,\r\n    loading\r\n   }\r\n}\r\n\r\nexport default useFetch"]},"metadata":{},"sourceType":"module"}